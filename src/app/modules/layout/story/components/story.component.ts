import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { AuthService } from '../../../../services/auth.service';
import { PostService } from '../../../../services/post.service';
import { ProfileService } from '../../../../services/profile.service';
import { UploadService } from '../../../../services/upload.service';
import { NgxSpinnerService } from "ngx-spinner";
import { ToastrService } from 'ngx-toastr';
import { Router, ActivatedRoute } from '@angular/router';
import { routers } from '../../../../utils/router-navigate';
import { Observable } from 'rxjs';
import { first, map } from 'rxjs/operators';
import * as auth from 'firebase/auth';
import { AngularFireAuth } from '@angular/fire/compat/auth';
import { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/compat/firestore';
import { Component, OnInit } from '@angular/core';

declare var swal: any;
declare var $: any;
declare var Zuck: any

@Component({
  selector: 'app-story',
  templateUrl: '../pages/story.component.html',
  styleUrls: ['../pages/story.component.scss']
})
export class StoryComponent implements OnInit {

  getStoriesUserData: any = [];
  getStoriesData: any = [];

  zuckStories: any;

  constructor(
    private formBuilder: FormBuilder,
    private authService: AuthService,
    private postService: PostService,
    private uploadService: UploadService,
    private spinner: NgxSpinnerService,
    private toastr: ToastrService,
    public routernavigate: routers,
    private router: Router,
    private route: ActivatedRoute,
    public afs: AngularFirestore, // Inject Firestore service
    public afAuth: AngularFireAuth, // Inject Firebase auth service
  ) { }

  async ngOnInit(): Promise<void> {
    await this.getStories(0);
    
    (window as any).globalApp = this;
  }

  async getStories(type: any) {
    this.getStoriesUserData = [];
    this.getStoriesData = [];
    this.getStoriesUserData.length = 0;
    console.log(this.getStoriesUserData.length);
    this.postService.getGlobalStories().subscribe((data: any) => {
      console.log(data);
      if (data['statusCode'] === 200) {
        for(let i=0; i<data['storyData'].length; i++){
          
          console.log(data['storyData'][i]['storiesDetail'].length);

          for(let j=0; j<data['storyData'][i]['storiesDetail'].length; j++){
            let mediaType = "photo";
            if(data['storyData'][i]['storiesDetail'][j]['fileType'] === "image"){
              mediaType = "photo";
            } else if(data['storyData'][i]['storiesDetail'][j]['fileType'] === "video"){
              mediaType = "video";
            }

            this.getStoriesData.push(
              {
                id: data['storyData'][i]['storiesDetail'][j]['_id'],       // item id
                type: mediaType,     // photo or video
                length: 3,    // photo timeout or video length in seconds - uses 3 seconds timeout for images if not set
                src: data['storyData'][i]['storiesDetail'][j]['filePath'],      // photo or video src
                preview: data['storyData'][i]['storiesDetail'][j]['filePath'],  // optional - item thumbnail to show in the story carousel instead of the story defined image
                link: "",     // a link to click on story
                linkText: "", // link text
                time: this.timestamp(data['storyData'][i]['storiesDetail'][j]['createdAt']),     // optional a date to display with the story item. unix timestamp are converted to "time ago" format
                seen: false   // set true if current user was read,
              }
            );
          }
          let userPicture = data['storyData'][i]['profileImage'];
          if(!data['storyData'][i]['profileImage']){
            userPicture = "https://chello.world/assets/images/user.png";
          }
          this.getStoriesUserData.push({
            id: data['storyData'][i]['_id'],               // story id
            photo: userPicture,            // story photo (or user photo)
            name: data['storyData'][i]['userName'],             // story name (or user name)
            link: "https://ramon.codes",             // story link (useless on story generated by script)
            lastUpdated: this.timestamp(new Date()),      // last updated date in unix time format
            seen: false,          // set true if user has opened
          
            items: this.getStoriesData
          })

          this.getStoriesData = [];
        }
        if(type === 0){
          this.initZuck();
        } else{
          this.updateZuck();
        }
      }
      else {
        
      }
    }, (error) => {
      console.error(error);
    });
  }

  initZuck() {
    console.log(this.getStoriesUserData);

    this.zuckStories = new Zuck('stories', {
      backNative: true,
      previousTap: true,
      backButton: true,
      skin: "Snapssenger",
      autoFullScreen: false,
      avatars: false,
      paginationArrows: true,
      list: false,
      cubeEffect: true,
      localStorage: true,
      stories: this.getStoriesUserData,
          
        
        // Zuck.buildTimelineItem(
        //   'ramon',
        //   'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/users/1.jpg',
        //   'Ramon',
        //   'https://ramon.codes',
        //   this.timestamp(),
        //   [
        //     [
        //       'ramon-1',
        //       'photo',
        //       3,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/1.jpg',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/1.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //     [
        //       'ramon-2',
        //       'video',
        //       0,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/2.mp4',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/2.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //     [
        //       'ramon-3',
        //       'photo',
        //       3,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/3.png',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/3.png',
        //       'https://ramon.codes',
        //       'Visit my Portfolio',
        //       false,
        //       this.timestamp(),
        //     ],
        //   ],
        // ),
        // Zuck.buildTimelineItem(
        //   'gorillaz',
        //   'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/users/2.jpg',
        //   'Gorillaz',
        //   '',
        //   this.timestamp(),
        //   [
        //     [
        //       'gorillaz-1',
        //       'video',
        //       0,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/4.mp4',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/4.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //     [
        //       'gorillaz-2',
        //       'photo',
        //       3,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/5.jpg',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/5.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //   ],
        // ),
        // Zuck.buildTimelineItem(
        //   'ladygaga',
        //   'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/users/3.jpg',
        //   'Lady Gaga',
        //   '',
        //   this.timestamp(),
        //   [
        //     [
        //       'ladygaga-1',
        //       'photo',
        //       5,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/6.jpg',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/6.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //     [
        //       'ladygaga-2',
        //       'photo',
        //       3,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/7.jpg',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/7.jpg',
        //       'http://ladygaga.com',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //   ],
        // ),
        // Zuck.buildTimelineItem(
        //   'starboy',
        //   'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/users/4.jpg',
        //   'The Weeknd',
        //   '',
        //   this.timestamp(),
        //   [
        //     [
        //       'starboy-1',
        //       'photo',
        //       5,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/8.jpg',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/8.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //   ],
        // ),
        // Zuck.buildTimelineItem(
        //   'riversquomo',
        //   'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/users/5.jpg',
        //   'Rivers Cuomo',
        //   '',
        //   this.timestamp(),
        //   [
        //     [
        //       'riverscuomo',
        //       'photo',
        //       10,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/9.jpg',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/9.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //   ],
        // ),
        // Zuck.buildTimelineItem(
        //   'riverscuomon',
        //   'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/users/5.jpg',
        //   'Rivers Cuomo',
        //   '',
        //   this.timestamp(),
        //   [
        //     [
        //       'riverscuomon',
        //       'photo',
        //       7,
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/9.jpg',
        //       'https://raw.githubusercontent.com/ramon82/assets/master/zuck.js/stories/9.jpg',
        //       '',
        //       false,
        //       false,
        //       this.timestamp(),
        //     ],
        //   ],
        // ),
      //],
      callbacks: {
        onClose(storyId: any, callback: any) {
          $('#zuck-modal').css({
            overflow: '',
            position: '',
            top: '',
            zindex: '999',
          });
          $('html').css({
            overflow: 'auto',
          });
          document.getElementById('zuck-modal')?.classList.add('closed')
          callback() // on close story viewer
        },
        onOpen(storyId: any, callback: any) {
          let scrollPos = $('body').scrollTop();
          $('#zuck-modal').css({
            overflow: 'hidden',
            position: 'fixed',
            top: -scrollPos,
            zIndex: '999',
          });
          $('html').css({
            overflow: 'hidden',
          });
          document.getElementById('zuck-modal')?.classList.remove('closed')
          callback() // on open story viewer
        }
      },      
    })    
  }

  updateZuck() {
    console.log(this.getStoriesUserData);

    this.zuckStories.update(this.getStoriesUserData);
  }

  timestamp(storyDate: any) {
    var timeIndex = 0;
    var shifts = [35, 60, 60 * 3, 60 * 60 * 2, 60 * 60 * 25, 60 * 60 * 24 * 4, 60 * 60 * 24 * 10];

    var now: any = new Date(storyDate);
    var shift = shifts[timeIndex++] || 0;
    var date = new Date(now - shift * 1000);

    return date.getTime() / 1000;
  }


}
